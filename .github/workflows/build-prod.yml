name: Production

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - method
      - discipline
      - resource
      - article
  push:
    paths:
      - "web/**"

jobs:
  load-rdf-job:
    runs-on: ubuntu-latest
    name: Build and deploy 11ty site to Digital Ocean
    # name: Transform and load Sanity content as RDF then build and upload UX Methods
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v4

      # Data extractin and transformation. Reintegrate later. 
      # - name: Extract & Transform
      #   uses: ./actions/method-transform
      #   id: extract-transform

      # - name: Upload RDF file as artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: rdfData
      #     path: rdfData.ttl
      # # Artifact is needed for this upload step. Look into more efficient way to pass this â€” input/output

      # - name: Upload RDF to Data.World
      #   uses: fjogeleit/http-request-action@master
      #   with:
      #     url: "https://api.data.world/v0/uploads/andyfitzgerald/method-io-data/files"
      #     method: "POST"
      #     contentType: "multipart/form-data"
      #     bearerToken: {{ secrets.DATA_WORLD_READ_WRITE }}
      #     files: '{ "file": "rdfData.ttl" }'

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "23"

      - name: Install Project Dependencies
        run: npm ci --legacy-peer-deps
        working-directory: web

      - name: Build 11ty
        id: build
        run: npx @11ty/eleventy
        working-directory: web
        env:
          NODE_ENV: production
          KG_AUTH: ${{ secrets.KG_AUTH }}
        continue-on-error: false

      - name: Check for KG fallback usage
        run: |
          if grep -q "Using fallback data" web/_site/index.html; then
            echo "WARNING: Using fallback KG data" >> $GITHUB_STEP_SUMMARY
            echo "::warning::Using fallback KG data"
          fi

      - name: Verify build
        run: ls -la ./_site
        working-directory: web

      - name: Set Up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.DO_UXM_PROD_SSH_KEY }}" > ~/.ssh/do_uxm_prod
          sudo chmod 600 ~/.ssh/do_uxm_prod
          ssh-keyscan -H "24.199.98.130" > ~/.ssh/known_hosts

      - name: Manage fallback data directory
        run: |
          # Create directory if it doesn't exist
          ssh -i ~/.ssh/do_uxm_prod prod@24.199.98.130 "mkdir -p /var/www/uxm/fallback-data"
          
          # Keep only the 2 most recent backup files
          ssh -i ~/.ssh/do_uxm_prod prod@24.199.98.130 "ls -t /var/www/uxm/fallback-data/kg-data-*.json | tail -n +3 | xargs -r rm"

      - name: Upload fallback data
        run: |
          if [ -f "web/_data/fallback-data/kg-data.json" ]; then
            # Add timestamp to filename to keep history
            TIMESTAMP=$(date +%Y%m%d-%H%M%S)
            scp -i ~/.ssh/do_uxm_prod web/_data/fallback-data/kg-data.json prod@24.199.98.130:/var/www/uxm/fallback-data/kg-data-${TIMESTAMP}.json
          fi

      - name: Clean & FTP Upload
        run: |
          ssh -i ~/.ssh/do_uxm_prod prod@24.199.98.130 "rm -rf /var/www/uxm/html/*"
          sftp -i ~/.ssh/do_uxm_prod prod@24.199.98.130 <<< $'cd /var/www/uxm/html \n put -r web/_site/*'